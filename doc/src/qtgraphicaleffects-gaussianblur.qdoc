/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the documentation of the Qt Graphical Effects module.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmltype GaussianBlur
    \inqmlmodule QtGraphicalEffects 1.0
    \since QtGraphicalEffects 1.0
    \inherits QtQuick2::Item
    \ingroup qtgraphicaleffects-blur
    \brief Applies a higher quality blur effect.

    GaussianBlur effect softens the image by blurring it with an algorithm that
    uses the Gaussian function to calculate the effect. The effect produces
    higher quality than \l{QtGraphicalEffects1::FastBlur}{FastBlur}, but is slower to render.

    \table
    \header
        \li Source
        \li Effect applied
    \row
        \li \image Original_bug.png
        \li \image GaussianBlur_bug.png
    \endtable

    \section1 Example

    The following example shows how to apply the effect.
    \snippet snippets/GaussianBlur-example.qml example

*/

/*!
    \qmlproperty variant QtGraphicalEffects1::GaussianBlur::source

    This property defines the source item that is going to be blurred.

*/
/*!
    \qmlproperty real QtGraphicalEffects1::GaussianBlur::radius

    This property defines the distance of the neighboring pixels which affect
    the blurring of an individual pixel. A larger radius increases the blur
    effect.

    Depending on the radius value, value of the \l{GaussianBlur::samples}{samples} should be set to
    sufficiently large to ensure the visual quality.

    The value ranges from 0.0 (no blur) to inf. By default, the property is set to
    \c 0.0 (no blur).

    \table
    \header
    \li Output examples with different radius values
    \li
    \li
    \row
        \li \image GaussianBlur_radius1.png
        \li \image GaussianBlur_radius2.png
        \li \image GaussianBlur_radius3.png
    \row
        \li \b { radius: 0 }
        \li \b { radius: 4 }
        \li \b { radius: 8 }
    \row
        \li \l samples: 16
        \li \l samples: 16
        \li \l samples: 16
    \row
        \li \l deviation: 3
        \li \l deviation: 3
        \li \l deviation: 3
    \endtable

*/

/*!
    \qmlproperty int QtGraphicalEffects1::GaussianBlur::samples

    This property defines how many samples are taken per pixel when blur
    calculation is done. Larger value produces better quality, but is slower
    to render.

    Ideally, this value should be twice as large as the highest required radius
    value, for example, if the radius is animated between 0.0 and 4.0, samples
    should be set to 8.

    The value ranges from 0 to 32. By default, the property is set to \c 0.

    This property is not intended to be animated. Changing this property may
    cause the underlying OpenGL shaders to be recompiled.

*/

/*!
    \qmlproperty real QtGraphicalEffects1::GaussianBlur::deviation

    This property is a parameter to the gaussian function that is used when
    calculating neighboring pixel weights for the blurring. A larger deviation
    causes image to appear more blurry, but it also reduces the quality of the
    blur. A very large deviation value causes the effect to look a bit similar
    to what, for exmple, a box blur algorithm produces. A too small deviation
    values makes the effect insignificant for the pixels near the radius.

    \inlineimage GaussianBlur_deviation_graph.png
    \caption The image above shows the Gaussian function with two different
    deviation values, yellow (1) and cyan (2.7). The y-axis shows the weights,
    the x-axis shows the pixel distance.

    The value ranges from 0.0 (no deviation) to inf (maximum deviation). By
    default, devaition is binded to radius. When radius increases, deviation is
    automatically increased linearly. With the radius value of 8, the deviation
    default value becomes approximately 2.7034. This value produces a compromise
    between the blur quality and overall blurriness.

    \table
    \header
    \li Output examples with different deviation values
    \li
    \li
    \row
        \li \image GaussianBlur_deviation1.png
        \li \image GaussianBlur_deviation2.png
        \li \image GaussianBlur_deviation3.png
    \row
        \li \b { deviation: 1 }
        \li \b { deviation: 2 }
        \li \b { deviation: 4 }
    \row
        \li \l radius: 8
        \li \l radius: 8
        \li \l radius: 8
    \row
        \li \l samples: 16
        \li \l samples: 16
        \li \l samples: 16
    \endtable

*/

/*!
    \qmlproperty bool QtGraphicalEffects1::GaussianBlur::transparentBorder

    This property defines the blur behavior near the edges of the item, where
    the pixel blurring is affected by the pixels outside the source edges.

    If the property is set to \c true, the pixels outside the source are
    interpreted to be transparent, which is similar to OpenGL clamp-to-border
    extension. The blur is expanded slightly outside the effect item area.

    If the property is set to \c false, the pixels outside the source are
    interpreted to contain the same color as the pixels at the edge of the item,
    which is similar to OpenGL clamp-to-edge behavior. The blur does not expand
    outside the effect item area.

    By default, the property is set to \c false.

    \table
    \header
    \li Output examples with different transparentBorder values
    \li
    \li
    \row
        \li \image GaussianBlur_transparentBorder1.png
        \li \image GaussianBlur_transparentBorder2.png
    \row
        \li \b { transparentBorder: false }
        \li \b { transparentBorder: true }
    \row
        \li \l radius: 8
        \li \l radius: 8
    \row
        \li \l samples: 16
        \li \l samples: 16
    \row
        \li \l deviation: 2.7
        \li \l deviation: 2.7
    \endtable

*/

/*!
    \qmlproperty bool QtGraphicalEffects1::GaussianBlur::cached

    This property allows the effect output pixels to be cached in order to
    improve the rendering performance.
    Every time the source or effect properties are changed, the pixels in the cache
    must be updated. Memory consumption is increased, because an extra buffer of
    memory is required for storing the effect output.

    It is recommended to disable the cache when the source or the effect
    properties are animated.

    By default, the property is set to \c false.

*/
