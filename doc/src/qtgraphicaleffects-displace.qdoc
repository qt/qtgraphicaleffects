/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the documentation of the Qt Graphical Effects module.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmlclass Displace
    \inqmlmodule QtGraphicalEffects
    \brief Moves the pixels of the source item according to the given
    displacement map.

    \table
    \header
        \li Source
        \li DisplacementSource
        \li Effect applied
    \row
        \li \image Original_bug.png
        \li \image Displace_map.png
        \li \image Displace_bug.png
    \endtable

    \section1 Example

    The following example shows how to apply the effect.
    \snippet snippets/Displace-example.qml example

*/

/*!
    \qmlproperty variant QtGraphicalEffects::Displace::source

    This property defines the source item for the pixels that are going to be
    displaced according to the data from \l displacementSource.

*/

/*!
    \qmlproperty variant QtGraphicalEffects::Displace::displacementSource

    This property defines the item that is going to be used as the displacement
    map. The displacementSource item gets rendered into the intermediate pixel
    buffer. The red and green component values from the result determine the
    displacement of the pixels from the source item.

    The format for the displacement map is similar to the tangent space normal
    maps, which can be created with most 3D-modeling tools. Many image
    processing tools include the support for generating normal maps.
    Alternatively, the displacement map for this effect can also be a QML
    element which is colored appropriately. Like any QML element, it can be
    animated. It is recommended that the size of the diplacement map matches the
    size of the \l source.

    The displace data is interpreted in the RGBA format. For every pixel: the
    red channel stores the x-axis displacement, and the green channel stores the
    y-axis displacement. Blue and alpha channels are ignored for this effect.

    Assuming that red channel value 1.0 is fully red (0.0 having no red at all),
    this effect considers pixel component value 0.5 to cause no displacement at
    all. Values above 0.5 shift pixels to the left, values below 0.5 do the
    shift to the right. In a similar way, green channel values above 0.5
    displace the pixels upwards, and values below 0.5 shift the pixels
    downwards. The actual amount of displacement in pixels depends on the \l
    displacement property.

*/

/*!
    \qmlproperty variant QtGraphicalEffects::Displace::displacement

    This property defines the scale for the displacement. The bigger scale, the
    bigger the displacement of the pixels. The value set to 0.0 causes no
    displacement.

    The value ranges from -1.0 (inverted maximum shift, according to
    displacementSource) to 1.0 (maximum shift, according to displacementSource).
    By default, the property is set to \c 0.0 (no displacement).

    \table
    \header
    \li Output examples with different displacement values
    \li
    \li
    \row
        \li \image Displace_displacement1.png
        \li \image Displace_displacement2.png
        \li \image Displace_displacement3.png
    \row
        \li \b { displacement: -0.2 }
        \li \b { displacement: 0.0 }
        \li \b { displacement: 0.2 }
    \endtable

*/


/*!
    \qmlproperty bool QtGraphicalEffects::Displace::cached

    This property allows the effect output pixels to be cached in order to improve the rendering performance.

    Every time the source or effect properties are changed, the pixels in the cache must be updated.
    Memory consumption is increased, because an extra buffer of memory is required for storing the effect output.

    It is recommended to disable the cache when the source or the effect properties are animated.

    By default, the property is set to \c false.

*/
