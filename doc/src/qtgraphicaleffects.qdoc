/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the documentation of the Qt Graphical Effects module.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
\title Qt Graphical Effects
\page qml-graphicaleffects-index.html
\brief Qt Graphical Effects module is a Qt Quick Add-On module.

The Qt Graphical Effects module provides a set of QML components for building
visually impressive user interfaces.
Over twenty ready-made QML graphical effect elements are currently available.
The effects include code for blending, masking, blurring, coloring, and much more.

The API for each effect is a set of QML properties which can be animated just
like any other QML properties. The element documentation contains property descriptions
and basic usage examples. Currently there is no C++ API.

Effects have been implemented with QML and GLSL.

\section1 Getting started
To load Qt Graphical Effects, add the following import statement to your .qml file:
\snippet snippets/Blend-example.qml import

\section1 Elements

The following list presents the functional division of components that are part of Qt Graphical Effects:

Blend
\list
\li \l {QtGraphicalEffects::Blend}{Blend} - merges two source items by using a blend mode
\endlist

Color
\list
\li \l {QtGraphicalEffects::BrightnessContrast}{BrightnessContrast} - adjusts brightness and contrast
\li \l {QtGraphicalEffects::Colorize}{Colorize} - sets color in the HSL color space
\li \l {QtGraphicalEffects::ColorOverlay}{ColorOverlay} - applies a color layer
\li \l {QtGraphicalEffects::Desaturate}{Desaturate} - reduces color saturation
\li \l {QtGraphicalEffects::GammaAdjust}{GammaAdjust} - adjusts luminance
\li \l {QtGraphicalEffects::HueSaturation}{HueSaturation} - adjusts colors in the HSL color space
\li \l {QtGraphicalEffects::LevelAdjust}{LevelAdjust} - adjusts colors in the RGB color space
\endlist

Gradient
\list
\li \l {QtGraphicalEffects::ConicalGradient}{ConicalGradient} - draws a conical gradient
\li \l {QtGraphicalEffects::LinearGradient}{LinearGradient} - draws a linear gradient
\li \l {QtGraphicalEffects::RadialGradient}{RadialGradient} - draws a radial gradient
\endlist

Distortion
\list
\li \l {QtGraphicalEffects::Displace}{Displace} - moves the pixels of the source item according to the specified displacement source
\endlist

Drop Shadow
\list
\li \l {QtGraphicalEffects::DropShadow}{DropShadow} - draws a drop shadow
\li \l {QtGraphicalEffects::InnerShadow}{InnerShadow} - draws an inner shadow
\endlist

Blur
\list
\li \l {QtGraphicalEffects::FastBlur}{FastBlur} - applies a fast blur effect
\li \l {QtGraphicalEffects::GaussianBlur}{GaussianBlur} - applies a higher quality blur effect
\li \l {QtGraphicalEffects::MaskedBlur}{MaskedBlur} - applies a varying intensity blur effect
\li \l {QtGraphicalEffects::RecursiveBlur}{RecursiveBlur} - blurs repeatedly, providing a strong blur effect
\endlist

Motion Blur
\list
\li \l {QtGraphicalEffects::DirectionalBlur}{DirectionalBlur} - applies a directional motion blur effect
\li \l {QtGraphicalEffects::RadialBlur}{RadialBlur} - applies a radial motion blur effect
\li \l {QtGraphicalEffects::ZoomBlur}{ZoomBlur} - applies a zoom motion blur effect
\endlist

Glow
\list
\li \l {QtGraphicalEffects::Glow}{Glow} - draws an outer glow effect
\li \l {QtGraphicalEffects::RectangularGlow}{RectangularGlow} - draws a rectangular outer glow effect
\endlist

Mask
\list
\li \l {QtGraphicalEffects::OpacityMask}{OpacityMask} - masks the source item with another item
\li \l {QtGraphicalEffects::ThresholdMask}{ThresholdMask} - masks the source item with another item and applies a threshold value
\endlist

*/
