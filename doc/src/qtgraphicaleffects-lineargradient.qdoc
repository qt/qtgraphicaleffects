/****************************************************************************
**
** Copyright (C) 2012 Nokia Corporation and/or its subsidiary(-ies).
** Contact: http://www.qt-project.org/
**
** This file is part of the documentation of the Qt Graphical Effects module.
**
** $QT_BEGIN_LICENSE:FDL$
** GNU Free Documentation License
** Alternatively, this file may be used under the terms of the GNU Free
** Documentation License version 1.3 as published by the Free Software
** Foundation and appearing in the file included in the packaging of
** this file.
**
** Other Usage
** Alternatively, this file may be used in accordance with the terms
** and conditions contained in a signed written agreement between you
** and Nokia.
**
**
**
**
**
** $QT_END_LICENSE$
**
****************************************************************************/

/*!
    \qmlclass LinearGradient
    \inqmlmodule QtGraphicalEffects
    \brief Draws a linear gradient.

    A gradient is defined by two or more colors, which are blended seamlessly.
    The colors start from the given start point and end to the given end point.

    \table
    \header
        \o Effect applied
    \row
        \o \image LinearGradient.png
    \endtable

    \section1 Example

    The following example shows how to apply the effect.
    \snippet snippets/LinearGradient-example.qml example

*/

/*!
    \qmlproperty Gradient QtGraphicalEffects::LinearGradient::gradient

    A gradient is defined by two or more colors, which are blended seamlessly.
    The colors are specified as a set of GradientStop child items, each of which
    defines a position on the gradient
    from 0.0 to 1.0 and a color. The position of each GradientStop is defined by
    the position property, and the color is definded by the color property.

    \table
    \header
    \o Output examples with different gradient values
    \o
    \o
    \row
        \o \image LinearGradient_gradient1.png
        \o \image LinearGradient_gradient2.png
        \o \image LinearGradient_gradient3.png
        \row
        \o \bold {gradient:} \code
Gradient {
  GradientStop { position: 0.000
  color: Qt.rgba(1, 0, 0, 1) }
  GradientStop { position: 0.167;
  color: Qt.rgba(1, 1, 0, 1) }
  GradientStop { position: 0.333;
  color: Qt.rgba(0, 1, 0, 1) }
  GradientStop { position: 0.500;
  color: Qt.rgba(0, 1, 1, 1) }
  GradientStop { position: 0.667;
  color: Qt.rgba(0, 0, 1, 1) }
  GradientStop { position: 0.833;
  color: Qt.rgba(1, 0, 1, 1) }
  GradientStop { position: 1.000;
  color: Qt.rgba(1, 0, 0, 1) }
}
    \endcode
        \o \bold {gradient:} \code
Gradient {
  GradientStop { position: 0.0
  color: "#F0F0F0"
  }
  GradientStop { position: 0.5
  color: "#000000"
  }
  GradientStop { position: 1.0
  color: "#F0F0F0"
  }
}
    \endcode
        \o \bold {gradient:} \code
Gradient {
  GradientStop { position: 0.0
    color: "#00000000"
  }
  GradientStop { position: 1.0
    color: "#FF000000"
  }
}
    \endcode
    \row
        \o \l start: Qt.point(0, 0)
        \o \l start: Qt.point(0, 0)
        \o \l start: Qt.point(0, 0)
    \row
        \o \l end: Qt.point(300, 300)
        \o \l end: Qt.point(300, 300)
        \o \l end: Qt.point(300, 300)
    \endtable

*/

/*!
    \qmlproperty variant QtGraphicalEffects::LinearGradient::source

    This property defines the item that is going to be filled with gradient. Source
    item gets rendered into an intermediate pixel buffer and the alpha values
    from the result are used to determine the gradient's pixels visibility in
    the display.
    The default value for source is undefined and in that case whole effect area
    is filled with gradient.

    \table
    \header
    \o Output examples with different source values
    \o
    \o
    \row
        \o \image LinearGradient_maskSource1.png
        \o \image LinearGradient_maskSource2.png
    \row
        \o \bold { source: undefined }
        \o \bold { source: Image { source: images/butterfly.png } }
    \row
        \o \l start: Qt.point(0, 0)
        \o \l start: Qt.point(0, 0)
    \row
        \o \l end: Qt.point(300, 300)
        \o \l end: Qt.point(300, 300)
    \endtable

*/

/*!
    \qmlproperty variant QtGraphicalEffects::LinearGradient::start

    This property defines the starting point where the color at gradient
    position of 0.0 is rendered. Colors at larger position values are rendered
    linearly towards the end point. The point is given in pixels and the default
    value is Qt.point(0, 0).
    Setting the default values for the start and \l end results in a full height
    linear gradient on the y-axis.

    \table
    \header
    \o Output examples with different start values
    \o
    \o
    \row
        \o \image LinearGradient_start1.png
        \o \image LinearGradient_start2.png
        \o \image LinearGradient_start3.png
    \row
        \o \bold { start: QPoint(0, 0) }
        \o \bold { start: QPoint(150, 150) }
        \o \bold { start: QPoint(300, 0) }
    \row
        \o \l end: QPoint(300, 300)
        \o \l end: QPoint(300, 300)
        \o \l end: QPoint(300, 300)
    \endtable

*/

/*!
    \qmlproperty variant QtGraphicalEffects::LinearGradient::end

    This property defines the ending point where the color at gradient position
    of 1.0 is rendered. Colors at smaller position values are rendered linearly
    towards the start point. The point is given in pixels and the default value
    is Qt.point(0, height).
    Setting the default values for the \l start and end results in a full height
    linear gradient on the y-axis.

    \table
    \header
    \o Output examples with different end values
    \o
    \o
    \row
        \o \image LinearGradient_end1.png
        \o \image LinearGradient_end2.png
        \o \image LinearGradient_end3.png
    \row
        \o \bold { end: Qt.point(300, 300) }
        \o \bold { end: Qt.point(150, 150) }
        \o \bold { end: Qt.point(300, 0) }
    \row
        \o \l start: Qt.point(0, 0)
        \o \l start: Qt.point(0, 0)
        \o \l start: Qt.point(0, 0)
    \endtable

*/

/*!
    \qmlproperty bool QtGraphicalEffects::LinearGradient::cached

    This property allows the effect output pixels to be cached in order to
    improve the rendering performance.

    Every time the source or effect properties are changed, the pixels in the
    cache must be updated. Memory consumption is increased, because an extra
    buffer of memory is required for storing the effect output.

    It is recommended to disable the cache when the source or the effect
    properties are animated.

    By default, the property is set to \c false.

*/
